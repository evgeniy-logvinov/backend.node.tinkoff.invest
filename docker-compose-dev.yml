version: "3.7"
services:
  carrier:
    container_name: carrier_container
    build: .
    ports:
      - "8090:8080"
      - "9229:9229"
    depends_on:
      - postgres
    links:
      - "postgres:pgsql-server"
    command: "npm run start:in-docker:dev"
    volumes:
      - "./src:/usr/src/app/src"
      - "./app:/usr/src/app/app"
      - "./index.js:/usr/src/app/index.js"
    networks:
      - postgres
    environment:
      TOKEN: ${TOKEN:-empty}
      SANDBOX_TOKEN: ${SANDBOX_TOKEN:-empty}
      DATABASE: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-postgres}

  postgres:
    container_name: postgres_container
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:4.18
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT:-80}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    links:
      - "postgres:pgsql-server"
    networks:
      - postgres
    logging:
      driver: none

networks:
  postgres:
    driver: bridge
